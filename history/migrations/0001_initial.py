# Generated by Django 4.2.7 on 2025-07-22 18:56

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ExecutiveHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "position",
                    models.CharField(
                        choices=[
                            ("president", "President"),
                            ("vice_president", "Vice President"),
                            ("secretary", "Secretary"),
                            ("treasurer", "Treasurer"),
                            ("financial_secretary", "Financial Secretary"),
                            ("publicity_secretary", "Publicity Secretary"),
                            ("social_secretary", "Social Secretary"),
                            ("welfare_secretary", "Welfare Secretary"),
                            ("chaplain", "Chaplain"),
                            ("provost", "Provost"),
                            ("assistant_secretary", "Assistant Secretary"),
                            ("ex_officio", "Ex-Officio"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "session",
                    models.CharField(help_text="e.g., 2020/2021", max_length=20),
                ),
                ("start_year", models.IntegerField()),
                ("end_year", models.IntegerField()),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="executives/"),
                ),
                ("bio", models.TextField(blank=True)),
                ("achievements", models.TextField(blank=True)),
                ("current_occupation", models.CharField(blank=True, max_length=200)),
                ("contact_info", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_approved", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "Executive Histories",
                "ordering": ["-start_year", "position"],
            },
        ),
        migrations.CreateModel(
            name="HistoryCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        default="#28a745", help_text="Hex color code", max_length=7
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True, help_text="Font Awesome icon class", max_length=50
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "History Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HistoryContribution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contributor_name", models.CharField(max_length=200)),
                ("contributor_email", models.EmailField(blank=True, max_length=254)),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                (
                    "supporting_documents",
                    models.FileField(
                        blank=True, null=True, upload_to="history_contributions/"
                    ),
                ),
                (
                    "images",
                    models.ImageField(
                        blank=True, null=True, upload_to="history_contributions/"
                    ),
                ),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("is_reviewed", models.BooleanField(default=False)),
                ("reviewer_notes", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-submitted_at"],
            },
        ),
        migrations.CreateModel(
            name="HistoryEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("event_date", models.DateField()),
                (
                    "end_date",
                    models.DateField(
                        blank=True,
                        help_text="For events spanning multiple days",
                        null=True,
                    ),
                ),
                ("location", models.CharField(blank=True, max_length=200)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="history/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_approved", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["event_date"],
            },
        ),
        migrations.CreateModel(
            name="Milestone",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "milestone_type",
                    models.CharField(
                        choices=[
                            ("founding", "Founding"),
                            ("anniversary", "Anniversary"),
                            ("revival", "Revival/Outreach"),
                            ("achievement", "Achievement"),
                            ("expansion", "Expansion"),
                            ("partnership", "Partnership"),
                            ("award", "Award/Recognition"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="milestones/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_approved", models.BooleanField(default=False)),
                ("is_featured", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["date"],
            },
        ),
    ]
